
@import "variables";

// MAIN STYLING FOR LINKS
@mixin main-link {
  color: $accent-color;
  text-decoration: none;
  font-weight: $bold-font-weight;
  &:hover {
    font-weight: $bolder-font-weight;
  }
}

@mixin action-button {
  margin: 10px;
  border-radius: 3px;
  font-size: .8em;
  padding: 10px 15px;
  font-weight: $bold-font-weight;
}



@mixin flex-container($height, $overflow, $direction, $wrap, $justify, $align, $align-h) {
  height: $height;
  overflow: $overflow;
  @include flexbox;
  @include flex-direction($direction);
  @include flex-wrap($wrap);
  @include justify-content($justify);
  @include align-content($align);
  @include align-items($align-h);
}

@mixin flex-inline-container($height, $overflow, $direction, $wrap, $justify, $align, $align-h) {
  height: $height;
  overflow: $overflow;
  @include inline-flex();
  @include flex-direction($direction);
  @include flex-wrap($wrap);
  @include justify-content($justify);
  @include align-content($align);
  @include align-items($align-h);
}

@mixin flex-item($order, $align, $values) {
  @include order($order);
  @include align-self($align);
  @include flex($values);
}


// Flexbox display
@mixin flexbox {
  display: -webkit-box;
  display: -moz-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin inline-flex {
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}


// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box: $values;
  -moz-box-flex: $values;
  -webkit-flex: $values;
  -ms-flex: $values;
  flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
// @mixin flex-direction($direction) {
//   -webkit-flex-direction: $direction;
//   -moz-flex-direction: $direction;
//   -ms-flex-direction: $direction;
//   flex-direction: $direction;
// }
@mixin flex-direction($direction: row) {
  @if $direction == row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
    -moz-box-direction: reverse;
    -moz-box-orient: horizontal;
  } @else if $direction == column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
    -moz-box-direction: normal;
    -moz-box-orient: vertical;
  } @else if $direction == column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
    -moz-box-direction: reverse;
    -moz-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
    -moz-box-direction: normal;
    -moz-box-orient: horizontal;
  }
  -webkit-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}




// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
// @mixin flex-wrap($wrap) {
//   -webkit-flex-wrap: $wrap;
//   -moz-flex-wrap: $wrap;
//   -ms-flex-wrap: $wrap;
//   flex-wrap: $wrap;
// }
@mixin flex-wrap($wrap: nowrap) {
  // No Webkit/FF Box fallback.
  -webkit-flex-wrap: $wrap;
  @if $wrap == nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $wrap;
  }
  flex-wrap: $wrap;
}


// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
  -moz-flex-flow: $flow;
  -ms-flex-flow: $flow;
  flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val: 0) {
  -webkit-box-ordinal-group: $val + 1;
  -moz-box-ordinal-group: $val + 1;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow: 1) {
  -webkit-box-flex: $grow;
  -moz-box-flex: $grow;
  -webkit-flex-grow: $grow;
  -moz-flex-grow: $grow;
  -ms-flex-grow: $grow;
  flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink: 0) {
  -webkit-flex-shrink: $shrink;
  -moz-flex-shrink: $shrink;
  -ms-flex-shrink: $shrink;
  flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
  -moz-flex-basis: $width;
  -ms-flex-basis: $width;
  flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
  -moz-justify-content: $justify;
  -moz-box-pack: $justify;
  -ms-justify-content: $justify;
  justify-content: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
  -webkit-align-content: $align;
  -moz-align-content: $align;
  -ms-align-content: $align;
  align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  -webkit-align-items: $align;
  -moz-align-items: $align;
  -ms-align-items: $align;
  -moz-box-align: $align;
  align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
  -webkit-align-self: $align;
  -moz-align-self: $align;
  -ms-align-self: $align;
  align-self: $align;
}



// BUTTON USED FOR AUTH FORMS
@mixin auth-button {
  display: block;
  font-size: 1em;
  font-weight: $bold-font-weight;
  border-radius: 3px;
  margin: 0 auto;
  background-color: $accent-color;
  border: none;
  width: 350px;
  padding: 12px 0;
  color: white;
  &:hover {
    background-color: darken($accent-color, 10%);
    cursor: pointer;
    font-weight: $bolder-font-weight;
  }
}

// BUTTON USED FOR AUTH FORMS
@mixin auth-button-toggle {
  display: block;
  font-size: 1em;
  font-weight: $bold-font-weight;
  border-radius: 3px;
  margin: 0 auto;
  background-color: $accent-color;
  border: none;
  width: 500px;
  padding: 12px 0;
  color: white;
  &:hover {
    background-color: darken($accent-color, 10%);
    cursor: pointer;
    font-weight: $bolder-font-weight;
  }
}


// ERROR MESSAGE
@mixin error-message {
  color: $error-color;
  font-weight: $light-font-weight;
}

@mixin success-message {
  color: $success-color;
  font-weight: $light-font-weight;
}

@mixin warning-message {
  color: $warning-color;
  font-weight: $light-font-weight;
 }
